<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   xmlns:spicefactory="http://www.spicefactory.org/parsley/pimento"
			xmlns:parsley="http://www.spicefactory.org/parsley" 
			xmlns:presentation="org.kdata.mobile.presentation.*"
			skinClass="{DetailsViewSkin}" >

	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="filterReload")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.db.mongo.Document;
			import org.kdata.mobile.events.DetailsEvent;
			import org.kdata.mobile.presentation.skin.DetailsViewSkin;
			
			public static const FILTER_RELOAD:String = "filterReload";
			
			[Inject] [Bindable]
			public var model:MainPresentationModel;		
			
			[Bindable]
			private var dataList:ArrayCollection = new ArrayCollection();
						
			[MessageHandler] public function filter(e:DetailsEvent):void
			{
				switch(e.type)
				{
					case DetailsEvent.DETAILS_CHANGE:
					{
						dataList.removeAll();
						for each(var obj:Object in model.selectedDocument as Object)
						{
							if(getQualifiedClassName(obj) == getQualifiedClassName(Object))
							{
								if(obj.label!="titolo")
									dataList.addItem(obj);
							}
						}
						break;
					}
					
					case DetailsEvent.FILTER_CHANGE:
					{
						var doc:Document = new Document();
						
						for each(obj in model.selectedDocument as Object)
						{
							if(getQualifiedClassName(obj) == getQualifiedClassName(Object))
							{
								if(obj.visible == true || obj.checked == true)
								{
									doc.put(obj.label + ".text" , obj.text)
								}
							}

						}
						model.docSelected=doc;
						dispatchEvent(new Event(FILTER_RELOAD));
						model.load();
						break;
						
						break;
					}
						
					default:
					{
						break;
					}
				}
			}
		]]>
	</fx:Script>

	<presentation:FilterView  dataProvider="{dataList}"/>
	
</s:SkinnableContainer>
